/*--------------------------------------------------------------------------------------------------------------------------*/
/*!!Warning: This is a key information asset of Huawei Tech Co.,Ltd                                                         */
/*CODEMARK:kOyQZYzjDpyGdBAEC2GaWinjiDDUykL9e8pckESWBbMVmSWkBuyJO01cTiy3TdzKxGk0oBQa
mSMf7J4FkTpfv/JzwTgKEHe/9N4yU5rqhECzcd0qHjxrE76U1z7jqu9Y5M3Mt4N+LrDnKskR
p9kctkciaZJvwHAJYpzYdQ+lr9+QrZQaczQSDWQPYeTXScOB67s10DxQ5LAjvz1DrxueCOkO
A5wpkuCOLyY0p4IKcYTiIEZbrsb1n1hRS7WzsFt54x169Mk2ksGtrpprIK5AmA==*/
/*--------------------------------------------------------------------------------------------------------------------------*/
#ifndef __SCD_DRV_H__
#define __SCD_DRV_H__


#include "basedef.h"
#include "mem_manage.h"
#include "vfmw.h"


/*######################################################
       MACRO & CONSTANTS
 ######################################################*/
#define REP_SCD_ADDR_BUG               //????SCD????????

#define SCDDRV_OK                      (0)
#define SCDDRV_ERR                     (-1)

#define HEADER_BUFFER_SIZE             (1024 + 128)

#define SCD_TIME_OUT_COUNT             (200)
#define SCD_TIMEOUT                    (2000)
#define SCD_FPGA_TIMEOUT               (200000)

/* control registers */
#define REG_SCD_START                  (0x800)
#define REG_LIST_ADDRESS               (0x804)
#define REG_UP_ADDRESS                 (0x808)
#define REG_UP_LEN                     (0x80c)
#define REG_BUFFER_FIRST               (0x810)
#define REG_BUFFER_LAST                (0x814)
#define REG_BUFFER_INI                 (0x818)
#define REG_SCD_PROTOCOL               (0x820)

#define REG_DSP_SPS_MSG_ADDRESS        (0x828)
#define REG_DSP_PPS_MSG_ADDRESS        (0x82c)
#define REG_DVM_MSG_ADDRESS            (0x830)
#define REG_SED_TOP_ADDRESS            (0x834)
#define REG_CA_MN_ADDRESS              (0x838)

/* state registers */
#define REG_SCD_OVER                   (0x840)
#define REG_SCD_INT                    (0x844)
#define REG_SCD_NUM                    (0x84c)
#define REG_ROLL_ADDR                  (0x850)
#define REG_SRC_EATEN                  (0x854)

#define REG_SCD_SAFE_INT_MASK          (0x884)
#define REG_SCD_SAFE_INI_CLR           (0x888)
#define REG_SCD_NORM_INT_MASK          (0x81c)
#define REG_SCD_NORM_INI_CLR           (0x824)

#ifdef ENV_SOS_KERNEL
#define REG_SCD_INT_MASK               REG_SCD_SAFE_INT_MASK
#define REG_SCD_INI_CLR                REG_SCD_SAFE_INI_CLR
#else
#define REG_SCD_INT_MASK               REG_SCD_NORM_INT_MASK
#define REG_SCD_INI_CLR                REG_SCD_NORM_INI_CLR
#endif

#define REG_AVS_FLAG                   (0x0000)
#define REG_EMAR_ID                    (0x0004)
#define REG_VDH_SELRST                 (0x0008)
#define REG_VDH_ARBIT_CTRL_STATE       (0X0010)
#define REG_VDH_CK_GT                  (0x000c)
#define REG_DSP_WATCH_DOG              (0X0018)

#define REG_DSP_PROG_ST                (0x100)
#define REG_DSP_PROG_OVER              (0x104)
#define REG_DSP_PROG_WLEN              (0x108)
#define REG_DSP_PROG_STADDR            (0x10c)

// ????????
#define SM_INST_MODE_IDLE              (0)
#define SM_INST_MODE_WORK              (1)
#define SM_INST_MODE_WAIT              (2)

// ????????
#ifdef CFG_MAX_RAW_NUM
#define MAX_STREAM_RAW_NUM             (CFG_MAX_RAW_NUM)
#else
#define MAX_STREAM_RAW_NUM             (1024)
#endif

#ifdef CFG_MAX_SEG_NUM
#define MAX_STREAM_SEG_NUM             (CFG_MAX_SEG_NUM)
#else
#define MAX_STREAM_SEG_NUM             (1024 + 128)
#endif

#define MAX_STREAM_SEG_ALLOW           (100000)
#define MIN_STREAM_SEG_NUM             (4)          //????????SCD??????????????
#define SM_MAX_SMID                    (MAX_CHAN_NUM)
#define SM_SCD_UP_INFO_NUM             (2)

#ifdef SCD_MP4_SLICE_ENABLE
#define MAX_SM_SCD_UP_INFO_NUM         (3)          //MPEG4??????????????3??word??????????????2??word??????????
#else
#define MAX_SM_SCD_UP_INFO_NUM         (SM_SCD_UP_INFO_NUM)
#endif

#define SM_MAX_DOWNMSG_SIZE            (3*MAX_STREAM_RAW_NUM*sizeof(SINT32))
#define SM_MAX_UPMSG_SIZE              (SM_SCD_UP_INFO_NUM*MAX_STREAM_SEG_NUM*sizeof(SINT32))

#define DSP_SPS_MSG_SIZE               (32*8*4)
#define DSP_PPS_MSG_SIZE               (256*8*4)
#define DVM_SIZE                       (2*64*4)
#define DSP_SED_TOP_SIZE               (64*4*1088)
#define CA_MN_SIZE                     (64*4*1088)

#define SM_SEGWASTE_BUF_SIZE           (64)         //Seg??????????????????
#define SM_H263_THRESHOLD_NUM          (12)         //??????????H263??????????????H263????
#define SM_RAW_DISCARD_SIZE            (1024*1024)

#define WAIT_SEG_REL_MAX_TIME          (1000)
#define WAIT_SCD_RDY_MAX_TIME          (20000)

#define SM_VIDOBJLAY_START_CODE        (0x00000120)
#define SM_VOP_START_CODE              (0x000001b6)
#define SM_SHORT_VIDEO_START_CODE      (0x00008000)

#define SMSEG_STATE_INVALID            (0)
#define SMSEG_STATE_FRESH              (1)
#define SMSEG_STATE_READOUT            (2)

#ifdef CFG_SCD_BUF
#define SCD_MSG_BUFFER                 (CFG_SCD_BUF)
#else

#ifdef VFMW_SCD_LOWDLY_SUPPORT
#define SCD_LOWDLY_BUFFER              (600*1024)   //????????????????????????????????
#else
#define SCD_LOWDLY_BUFFER              (0)
#endif
#ifdef VFMW_AVSPLUS_SUPPORT
#define SCD_AVSPLUS_BUFFER             (20*1024)    //AVS+??????????????????????????
#else
#define SCD_AVSPLUS_BUFFER             (0)
#endif

#define SCD_MSG_BUFFER                 (60*1024 + SCD_AVSPLUS_BUFFER + SCD_LOWDLY_BUFFER)  // SCD????????
#endif

#define SCD_EOS_LEN                    (20)

/*######################################################
       TYPE DEFINE
 ######################################################*/
typedef enum
{
    FMW_OK          =  0,
    FMW_ERR_PARAM   = -1,
    FMW_ERR_NOMEM   = -2,
    FMW_ERR_NOTRDY  = -3,
    FMW_ERR_BUSY    = -4,
    FMW_ERR_RAWNULL = -5, // Number or Size is 0
    FMW_ERR_SEGFULL = -6, // Number or Size is 0
    FMW_ERR_SCD     = -7
} FMW_RETVAL_E;

typedef enum
{
    SCDDRV_SLEEP_STAGE_NONE = 0,      // ??????
	SCDDRV_SLEEP_STAGE_PREPARE,       // ????????????????????????????
	SCDDRV_SLEEP_STAGE_SLEEP          // ??????
} SCDDRV_SLEEP_STAGE_E;

/* register operator */
#define RD_SCDREG(reg)       MEM_ReadPhyWord((gScdRegBaseAddr + reg))
#define WR_SCDREG(reg, dat)  MEM_WritePhyWord((gScdRegBaseAddr + reg),(dat))

#define SMSEG_IS_READ( seg )     (((seg).SegState == SMSEG_STATE_READOUT) ? 1 : 0) 
#define SMSEG_IS_RELEASED( seg ) (((seg).SegState == SMSEG_STATE_INVALID) ? 1 : 0)
#define SMSEG_IS_FRESH( seg )    (((seg).SegState == SMSEG_STATE_FRESH) ? 1 : 0)

#define SMSEG_SET_ISREAD( seg )                       \
do{                                     \
  (seg).SegState = SMSEG_STATE_READOUT;                             \
} while (0)

#define SMSEG_SET_ISRELEASED( seg )                     \
do{                                     \
  (seg).SegState = SMSEG_STATE_INVALID;                             \
} while (0)

#define SMSEG_SET_ISFRESH( seg )                      \
do{                                     \
  (seg).SegState = SMSEG_STATE_FRESH;                             \
} while (0)

#define FMW_ASSERT( cond )                          \
do{                                     \
  if( !(cond) )                             \
  {                                   \
    return;                               \
  }                                   \
} while (0)

#define FMW_ASSERT_RET( cond, ret )                     \
do{                                     \
  if( !(cond) )                             \
  {                                   \
    return (ret);                           \
  }                                   \
} while (0)

#define SMSEG_PHY2VIR( SegArrayPtr, phy, vir )                \
do{                                     \
  (vir) = SegArrayPtr->pSegBufVirAddr+((phy)-SegArrayPtr->SegBufPhyAddr); \
} while (0)

/*Check Val is between MinValue and MaxValue*/
#define SM_CHECK_VALUE(Val,MinValue,MaxValue,RetAction) \
do \
{\
    if (((Val) < (MinValue)) || ((Val) > (MaxValue)))\
    {\
    RetAction;\
    }\
}while(0)


/*######################################################
       struct defs.
 ######################################################*/
typedef struct 
{
  SINT32      Head;
  SINT32      Tail;
  SINT32      History;
  SINT32      FirstPacketOffset;
  SINT32      CurShowIndex;
  SINT32      RawTotalSize;
  STREAM_DATA_S RawPacket[MAX_STREAM_RAW_NUM];
}RAW_ARRAY_S;

typedef struct  
{
    SINT8    ScdIntMask;
    SINT8    SliceCheckFlag;
    SINT8    ScdStart;//????????Scd
    
    UADDR    DownMsgPhyAddr;//????????????????????
    SINT32   *pDownMsgVirAddr;
    
    SINT32   *pUpMsgVirAddr;
    UADDR    UpMsgPhyAddr;
    
    SINT32   UpLen;
    UADDR    BufferFirst;
    UADDR    BufferLast;
    UADDR    BufferIni;
    SINT32   ScdProtocol;
    SINT32   ScdIniClr;

    UADDR    DspSpsMsgMemAddr;
    SINT32   *pDspSpsMsgMemVirAddr;
    SINT32   DspSpsMsgMemSize;

    UADDR    DspPpsMsgMemAddr;
    SINT32   *pDspPpsMsgMemVirAddr;
    SINT32   DspPpsMsgMemSize;

    UADDR    DvmMemAddr;
    SINT32   *pDvmMemVirAddr;
    SINT32   DvmMemSize;

    UADDR    DspSedTopMemAddr;
    SINT32   *pDspSedTopMemVirAddr;
    SINT32   DspSedTopMemSize;

    UADDR    DspCaMnMemAddr;
    SINT32   *pDspCaMnMemVirAddr;
    SINT32   DspCaMnMemSize;

    SINT32   ScdLowdlyEnable;
    SINT32   reg_avs_flag;
	//end add
}SM_CTRLREG_S;

typedef struct  
{
    SINT32  Avs_Flag;
    SINT32  EMAR_ID;
    SINT32  VDH_SEL_RST_EN;
}GLB_CTRLREG_S;

typedef struct  
{
    SINT32  Scdover;
    SINT32  ScdInt;
    SINT32  ShortScdNum;
    SINT32  ScdNum;
    UADDR   ScdRollAddr;
    SINT32  SrcEaten;
}SM_STATEREG_S;

/* MEPG4 ?????????????????? */
typedef struct
{
    USIGN  IsShStreamFlag:        1;
    USIGN  SliceFlag:             1;
    USIGN  IsShortHeader:         1;
    USIGN  StartCodeBitOffset:    4;
    USIGN  StartCodeLength:       4;
    USIGN  Reserved:              21;
} MP4_SCD_UPMSG;

/********************************************************************************
PhyAddr   ????????????????
VirAddr   ????????????????
LenInByte ??????????????????????????
StreamID  ????????ID????????????????????????????????????ID??
SegState  ????????????
        0??  ??????????????????
        1??  SCD??????????????????
        2??  ????????????????
        ??????reserved
IsLastSeg ????????????????????????????????????????????
        0??    ????????????????????
        1??    ??????????????????
        other??reserved
        ??????????????????????????????????????????????????H.264??????????
            ??????????NAL??MPEG??????????????????????picture
Pts         ????????????
*********************************************************************************/
typedef struct 
{
  SINT8     SegState;
  UINT8     IsLastSeg;
  UINT8     IsStreamEnd;
  UINT8     DspCheckPicOverFlag;
  UADDR     PhyAddr;
  SINT32    LenInByte;
  SINT32    StreamID;
  UINT64    Pts;
  UINT64    RawPts;
  UINT64    Usertag;
  UINT64    DispTime;
  UINT32    DispEnableFlag;
  UINT32    DispFrameDistance;
  UINT32    DistanceBeforeFirstFrame;
  UINT32    GopNum;
  UINT8    *VirAddr;
  /* MEPG4 ?????????????????? */
  MP4_SCD_UPMSG stMp4UpMsg;
}STREAM_SEG_S;


/********************************************************************************

RawPacket ??????????????????????????????????MAX_RAW_PACKET_NUM????????????????
Head    ????????????????????
Tail    ??????????????????????
SegBufPhyAddr ??????????????????????
pSegBufVirAddr  ??????????????????????
SegBufSize    ??????????????????????????????
SegBufReadAddr  ??????????????????????
SegBufWriteAddr ??????????????????????
*********************************************************************************/
typedef struct
{
    SINT32        Head;
    SINT32        Tail;
    SINT32        History;
    SINT32        Current;
    UADDR         SegBufPhyAddr;
    SINT32        SegBufSize;
    UADDR         SegBufReadAddr;
    UADDR         SegBufWriteAddr;
    SINT32        SegTotalSize;    /* SegTotalSize:  Insert??, Release?? */
    SINT32        SegFreshSize;    /* SegFreshSize:  Insert??, Read?? */
    SINT32        SegFreshNum;  
    UINT8        *pSegBufVirAddr;
    STREAM_SEG_S  StreamSeg[MAX_STREAM_SEG_NUM];  
} SEG_ARRAY_S;


/********************************************************************************
Mode  ??????????SM????????????????
        0????????????
        1??????????
        ????Mode??0????????????????????SM??????????????????????????????????????????????????????????????
Priority    ??????
            ??????????????????????????????????????????????????
            0????"??????"????????????????????????????????????
VidStd  VID_STD_E ??????????????????????????????????????????????????????????????????????????????????????????????????????
DownMsgAddr ????????????????????????????
DownMsgSize ????????????????????????
UpMsgAddr   ??????????????????????????????????
UpMsgSize   ????????????????????????
SegBufAddr  ????????????????????????????????????????????SCD??????????????????????????????????????????????????????????????????????????????????????????????Linux??????????????????????????????????????????????????????????????????
SegBufSize  ????????????????????????????
*********************************************************************************/
typedef struct 
{
    UINT8         Priority;
    SINT8         IsOmxPath;                /* omx path flag */
    SINT8         SpecMode;                 /* 0: normal mode; 1: CRC check mode */
    VID_STD_E     VidStd;
    UADDR         BufPhyAddr;
    SINT32        BufSize;
    UINT32        LastRawDisContinueCount;  /* ????????????????raw??DisContinueCount???? ??????????-1 */
    SINT32        ScdLowdlyEnable;          /* 0: ????????????; 1: ?????????? */
    SINT32        MaxRawPacketNum;
    SINT32        MaxRawPacketSize;
    UINT8        *pBufVirAddr;
    STD_EXTENSION_U    StdExt;              /* ??????????VC1??????????????????AP ??????????*/
}SM_CFG_S;


typedef struct 
{
    SINT32       *pDownMsgVirAddr;
    SINT32        DownMsgSize;
    UADDR         DownMsgPhyAddr;
  
    SINT32       *pUpMsgVirAddr;
    UADDR         UpMsgPhyAddr;
    SINT32        UpMsgSize;
    SINT32        UpMsgNum;  // Num of UpMsg, Unit: 2 * WORD
    
    UADDR         DspSpsMsgMemAddr;
	SINT32       *pDspSpsMsgMemVirAddr;
	SINT32        DspSpsMsgMemSize;

    UADDR         DspPpsMsgMemAddr;
	SINT32       *pDspPpsMsgMemVirAddr;
	SINT32        DspPpsMsgMemSize;

    UADDR         DvmMemAddr;
	SINT32       *pDvmMemVirAddr;
	SINT32        DvmMemSize;

    UADDR         DspSedTopMemAddr;
	SINT32       *pDspSedTopMemVirAddr;
	SINT32        DspSedTopMemSize;

    UADDR         DspCaMnMemAddr;
	SINT32       *pDspCaMnMemVirAddr;
	SINT32        DspCaMnMemSize;
    
    UADDR         SegBufPhyAddr;
    SINT32        SegBufSize;
    UINT8        *pSegBufVirAddr;
}SM_BUFFERCFG_S;


/********************************************************************************
 SM????????????????????????????????????????GetInfo()??????????
*********************************************************************************/
typedef struct
{
    SINT8         InstMode;      /* 0: ??????????,  1: ????????   */
    SINT32        RawNum;        /* ??????????????                */
    SINT32        SegNum;        /* ????????????????              */
    SINT32        TotalRawSize;  /* ????????????????????          */
    SINT32        TotalSegSize;  /* ????????????????????????      */

    SINT32        numReadSegFail;  /* ??????????seg?????? */
} SM_INST_INFO_S;

/********************************************************************************
 ????????Scd??Raw????????????????????SegStream??Pts????
*********************************************************************************/
typedef struct 
{
    UINT8    *pCurrStartVirAddr;
    UINT8    *pCurrEndVirAddr;
    UADDR     CurrStartPhyAddr;
    UADDR     CurrEndPhyAddr;
    SINT32    Length;
    SINT32    TotalLen;//????0????????????????????
    UINT64    Pts;    
} SM_PUSHRAWPACKET_S;

typedef struct 
{
    SINT32             PushRawNum;
    SINT32             PushRawTotalLen;
    SINT32             PushRawOver; // 0:??????????1:????????SCD??????2:????SCD??????3:????????????seekPTS??????????
}SM_PUSHRAW_S;

typedef enum
{
    SM_NOT_MPEG4 = 0,
    SM_MPEG4_NOTH263,
    SM_MPEG4_H263
}MPEG4_SUB_STD;

typedef struct 
{
    UINT8    *pSegBufVirAddr; //Seg Buffer??????????,????????????
    SINT32   *pScdUpMsg;      //??????????????????????
    SINT32    ProtocolType;
    SINT32    ModeFlag;       //0:????Mpeg4????; 1:??????????H263????, 2:????????H263????
    SINT32    LastH263Num;    //????????????????H263????????
    UADDR     SegBufPhyAddr;
    SINT32    SegBufSize;
    UADDR     SegBufRollAddr;
    SINT32    SegNum;         //????????SegStream??????????
}SM_SEGSTREAMFILTER_S;

typedef struct 
{
    SINT8          SegFullFlag;
    SINT8          IsCounting;
    SINT8          LastCfgAllRawFlag; // 1 : ??????????????SCD??????????RAW????????????????????????????????????SCD??????????????????
    SINT8          InsertNewSegFlag; // 1 : ??????SCD????????????SEG??????????????????????SCD????????????????SCD????????0
    SINT8          FillNewRawFlag; // 1 : ??????????SCD??????????????RAW??????????????????????SCD????????0
    SINT8          IsWaitSCD;
    SM_SEGSTREAMFILTER_S SegFilter;//????Mpeg4????????????
    SM_CFG_S       Config;
    RAW_ARRAY_S    RawPacketArray;
    SEG_ARRAY_S    StreamSegArray;
    SM_PUSHRAW_S   SmPushRaw;
    SM_BUFFERCFG_S BufAddrCfg;
    SINT32         InstID;
    SINT32         Mode;
    SINT32         TransFormSeg[MAX_STREAM_SEG_NUM * MAX_SM_SCD_UP_INFO_NUM]; //????????Seg????,????Mpeg4????????????????????????????,??????????????????
    UINT32         BlockTimeInMs;  // ??????????????????ms
    UINT32         LastBlockTime;  // ??????????????????(????????)??????????????????????
    UINT64         LastPts;//??????????Pts????????????????-1 
    SINT32         PrevCfgRawSize;
    SINT32         PrevCfgSegSize;

	/* ???????? */
	SINT32         TotalRawSize;
	UINT32         LastStatTime; //??????????????????
	UINT32         BitRate;  // ????, ????Kbps

    /* ???????????? */
    SINT32         numReadSegFail;
    SINT32         LastSCDStartTime; //????????SCD???????????????? ????

    UINT32         UpMsgStepNum;
    UINT32         u32RawSizeCount;
    UINT32         u32RawNumCount;

    UINT32         HeaderLen;
    UINT8          HeaderBuf[HEADER_BUFFER_SIZE];

} SM_INSTANCE_S;


typedef struct hiSCD_DRV_MEM_S
{
    UADDR          HwMemAddr;
    SINT32         HwMemSize;
    
    UINT32        *pDownMsgMemVirAddr;
    UADDR          DownMsgMemAddr;
    SINT32         DownMsgMemSize;
    
	SINT32        *pUpMsgMemVirAddr;
    UADDR          UpMsgMemAddr;
    SINT32         UpMsgMemSize;
//sps pps ??????????????
/*
	UADDR          DspSpsMsgMemAddr;
	SINT32         *pDspSpsMsgMemVirAddr;
	SINT32         DspSpsMsgMemSize;

	UADDR          DspPpsMsgMemAddr;
	SINT32         *pDspPpsMsgMemVirAddr;
	SINT32         DspPpsMsgMemSize;
*/
	SINT32         *pDvmMemVirAddr;
    UADDR          DvmMemAddr;
	SINT32         DvmMemSize;

	SINT32         *pDspSedTopMemVirAddr;
    UADDR          DspSedTopMemAddr;
	SINT32         DspSedTopMemSize;

	SINT32         *pDspCaMnMemVirAddr;
    UADDR          DspCaMnMemAddr;
	SINT32         DspCaMnMemSize;
//end add	    
} SCD_DRV_MEM_S;

/* 
    ????????????????SPS,PPS??????DDT MEM ????
*/
typedef struct 
{
	SINT32        *pDspSpsMsgMemVirAddr;
    UADDR          DspSpsMsgMemAddr;
    SINT32         DspSpsMsgMemSize;
    
	SINT32        *pDspPpsMsgMemVirAddr;
    UADDR          DspPpsMsgMemAddr;
    SINT32         DspPpsMsgMemSize;

    MEM_RECORD_S   stBaseMemInfo;
}DSP_CTX_MEM_S;

/********************************************************************************
SmInstArray     SM????????????????????????????
          0????????????????1??????????????
ThisInstID    ????SCD??????????????????
ScdState    SCD????????????
          0????????????????
          1????????????????????
*********************************************************************************/
typedef struct
{
    SCD_DRV_MEM_S       ScdDrvMem;
    DSP_CTX_MEM_S       DspCtxMem[MAX_CHAN_NUM];
    SM_INSTANCE_S      *pSmInstArray[MAX_CHAN_NUM];
    SINT32              IsScdDrvOpen;
    SINT32              ThisInstID;
    SINT32              SCDState;
    UINT32              LastProcessTime;
} SM_IIS_S;

/* 
    SM_OpenSCDDrv????????????
*/
typedef struct {
    UADDR MemAddr;
    SINT32 MemSize;
} SCD_OPEN_PARAM_S;


/*######################################################
       interface functions.
 ######################################################*/
SINT32 SCDDRV_PrepareSleep(VOID);
SCDDRV_SLEEP_STAGE_E SCDDRV_GetSleepStage(VOID);
VOID SCDDRV_ForceSleep(VOID);
VOID SCDDRV_ExitSleep(VOID);


/*========================================================================
    part1.    raw stream management module
========================================================================*/
/*********************************************************************************
    ????????
      SINT32 ResetSCD(VOID)
    ????????
      ????SCD????
    ????????
      ??
    ??????
      ??
    ????????
      ??
*********************************************************************************/
SINT32 ResetSCD(VOID);

/************************************************************************
  ????  VOID ResetRawStreamArray( RAW_ARRAY_S *pRawStreamArray )
  ????  ????????????????????????????????????????
  ????  pRawStreamArray ????????????????
  ??????  ??
************************************************************************/
VOID ResetRawStreamArray( RAW_ARRAY_S *pRawStreamArray );

/************************************************************************
  ????  SINT32 InsertRawPacket( RAW_ARRAY_S *pRawStreamArray, RAW_PACKET_S *pRawPacket )
  ????  ????????????????????????????????????
  ????  pRawStreamArray ????????????????
        pRawPacket  ??????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 InsertRawPacket( RAW_ARRAY_S *pRawStreamArray, STREAM_DATA_S *pRawPacket );

/************************************************************************
  ????  SINT32 GetRawIsFull(SINT32 SmID)
  ????  ????Raw Buffer??????????????
  ????  SmID  ????????????????????????
  ??????  ????????Raw Packet??????FMW_OK????????????????
************************************************************************/
SINT32 GetRawState(SINT32 SmID);

/************************************************************************
  ????  SINT32 SetFirstOffset( RAW_ARRAY_S *pRawStreamArray, SINT32 Offset )
  ????  ??????????????????????????????
  ????  pRawStreamArray ????????????????
    Offset  ????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 SetFirstOffset( RAW_ARRAY_S *pRawStreamArray, SINT32 Offset );

/************************************************************************
  ????  SINT32 GetFirstOffset( RAW_ARRAY_S *pRawStreamArray, SINT32 *pOffset )
  ????  ??????????????????????????????
  ????  pRawStreamArray ????????????????
        pOffset ????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 GetFirstOffset( RAW_ARRAY_S *pRawStreamArray, SINT32 *pOffset );

/************************************************************************
  ????  SINT32 ShowFirstRawPacket( RAW_ARRAY_S *pRawStreamArray, RAW_PACKET_S *pRawPacket )
  ????  ????????????????????????????????????????
  ????  pRawStreamArray ????????????????
        pRawPacket  ????????????????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 ShowFirstRawPacket( RAW_ARRAY_S *pRawStreamArray, STREAM_DATA_S *pRawPacket );

/************************************************************************
  ????  SINT32 ShowNextRawPacket( RAW_ARRAY_S *pRawStreamArray, RAW_PACKET_S *pRawPacket )
  ????  "Next"??????????????????Show??????????????????????ShowFirstRawPacket()????????????????????????????
  ????  pRawStreamArray ????????????????
        pRawPacket  ????????????????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 ShowNextRawPacket( RAW_ARRAY_S *pRawStreamArray, STREAM_DATA_S *pRawPacket );

/************************************************************************
  ????  SINT32 DeleteRawPacket( RAW_ARRAY_S *pRawStreamArray, UINT32 DelNum )
  ????  ??????????????????????????DelNum??????????
          ??????????????????????????????????????????????????????????????
      ??????????????????????????????????????????????????????????????????
      ????????MPP??????????????????????????????????????
  ????  pRawStreamArray ????????????????
        pRawPacket  ????????????????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 DeleteRawPacket( RAW_ARRAY_S *pRawStreamArray, UINT32 DelNum );

/************************************************************************
????    SINT32 DeleteRawPacketInBuffer(SINT32 SmID, SINT32 ResetFlag)
????    ??history????????????????head
????    pRawStreamArray ????????????????
??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 DeleteRawPacketInBuffer(SINT32 SmID, SINT32 ResetFlag);

/************************************************************************
  ????  SINT32 GetRawNumOffsert( RAW_ARRAY_S *pRawStreamArray, SINT32 Len, SINT32 *pNum, SINT32 *pOffset, UINT64 *pPts, UINT64 *pUsertag, UINT64 *pDisptime, UINT32 *pDispEnableFlag, UINT32 *pDispFrameDistance, UINT32 *pDistanceBeforeFirstFrame, UINT32 *pGopNum, UINT64 *pRawPts);
  ????  ??????Len??????????????????????????????????????????????????????Len????????????????????????Offset?? 
  ????  pRawStreamArray ????????????????
        Len             ????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 GetRawNumOffsert( RAW_ARRAY_S *pRawStreamArray, SINT32 Len, SINT32 *pNum, SINT32 *pOffset, UINT64 *pPts, UINT64 *pUsertag, UINT64 *pDisptime, UINT32 *pDispEnableFlag, UINT32 *pDispFrameDistance, UINT32 *pDistanceBeforeFirstFrame, UINT32 *pGopNum, UINT64 *pRawPts);

/************************************************************************
  ????  SINT32 DeleteRawLen( RAW_ARRAY_S *pRawStreamArray, SINT32 DelLen )
  ????  ??????????????????????????DelLen????????????????????????????????????????          
  ????  pRawStreamArray ????????????????
        DelLen  ??????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 DeleteRawLen( RAW_ARRAY_S *pRawStreamArray, SINT32 DelLen );

/************************************************************************
  ????  SINT32 DeleteLastSendRaw( UINT32 SmID  )
  ????  ????SmID????????????????????????SCD??????
  ????  SmID??????
  ??????  ??
************************************************************************/
VOID DeleteLastSendRaw( UINT32 SmID );

/************************************************************************
  ????  SINT32 GetRawStreamSize( RAW_ARRAY_S *pRawStreamArray, SINT32 *pStreamSize)
  ????  ????????????????????????????????????????????????????????????????????????????????
  ????  pRawStreamArray ????????????????
  ??????  ??????????????????????????????????????????
************************************************************************/
SINT32 GetRawStreamSize( RAW_ARRAY_S *pRawStreamArray, SINT32 *pStreamSize);

/************************************************************************
    ????  SINT32 GetRawStreamNum( RAW_ARRAY_S *pRawStreamArray, SINT32 *pStreamNum )
    ????  ??????????????????????????????????????????????????????????????????????????????
    ????  pRawStreamArray ????????????????
    ??????  ????????pStreamNum????????????????FMW_OK,??????????????????????????
************************************************************************/
SINT32 GetRawStreamNum( RAW_ARRAY_S *pRawStreamArray, SINT32 *pStreamNum );

/************************************************************************
????    SINT32 GetRawStreamNumInBuffer( RAW_ARRAY_S *pRawStreamArray, SINT32 *pStreamNum )
????    ??????????????????????????????????????????????????????????????buffer??????????????????
        ??????????????????????????????
????    pRawStreamArray ????????????????
??????  ????????pStreamNum????????????????FMW_OK,??????????????????????????
************************************************************************/
SINT32 GetRawStreamNumInBuffer(RAW_ARRAY_S *pRawStreamArray, SINT32 *pStreamNum);

/*========================================================================
    part2.    stream segment management module
========================================================================*/

/************************************************************************
  ????  SINT32 ConfigStreamSegArray( SEG_ARRAY_S *pStreamSegArray, UADDR BufPhyAddr, UINT8 *pBufVirAddr, UINT32 BufSize )
  ????  ????????????????????????????????????????????????????????????????
  ????  pStreamSegArray ????????????????????
        BufPhyAddr  ??????????????????????
        BufSize ??????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 ConfigStreamSegArray( SEG_ARRAY_S *pStreamSegArray, UADDR BufPhyAddr, UINT8 *pBufVirAddr, UINT32 BufSize );

/************************************************************************
  ????  VOID ResetStreamSegArray( SEG_ARRAY_S *pStreamSegArray )
  ????  ????????????????????????????????????????????????????????????????????????
  ????  pStreamSegArray ????????????????????
  ??????  ??
************************************************************************/
VOID ResetStreamSegArray( SEG_ARRAY_S *pStreamSegArray );

/************************************************************************
  ????  VOID GetSegBuf( SEG_ARRAY_S *pStreamSegArray, UINT32 *pBufAddr, UINT32 *pBufLength )
  ????  ????????????????????????????????
          SCD????????????????????????????????????
  ????  pStreamSegArray ????????????????????
        pAddr ??????????????????????????????????????????????
        pLength ????????????????????????????????
  ??????  ??
************************************************************************/
VOID GetSegBuf( SEG_ARRAY_S *pStreamSegArray, UADDR *pBufAddr, UINT32 *pBufLength );

/************************************************************************
  ????  VOID GetFreeSegBuf( SEG_ARRAY_S *pStreamSegArray, UINT32 *pAddr, UINT32 *pLength )
  ????  ??????????????????????????????????????????????????????????????????????????????
          ????????????????????????????buffer????????????????????????????????????????????
      ????????????????????????pAddr+pLength>buffer??????
  ????  pStreamSegArray ????????????????????
        pAddr ????????????????????????????????????????
        pLength ??????????????????????????
  ??????  ??
************************************************************************/
VOID GetFreeSegBuf( SEG_ARRAY_S *pStreamSegArray, SINT32 *pAddr, SINT32 *pLength );

/************************************************************************
  ????  SINT32 InsertStreamSeg( SEG_ARRAY_S *pStreamSegArray, STREAM_SEG_S *pStreamSeg )
  ????  ??????????????????????????????????????
      ????????????????????????????????????????????????????????????????????????????????????????????????????
  ????  pStreamSegArray ????????????????????
      pStreamSeg  ????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 InsertStreamSeg( SEG_ARRAY_S *pStreamSegArray, STREAM_SEG_S *pStreamSeg );

/************************************************************************
  ????  SINT32 GetStreamSeg( SEG_ARRAY_S *pStreamSegArray, STREAM_SEG_S *pStreamSeg )
  ????  ??????????????????????????????????????????????????????????????????????
  ????  pStreamSegArray ??????????????
        pStreamSeg  ????????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 GetStreamSeg( SEG_ARRAY_S *pStreamSegArray, STREAM_SEG_S *pStreamSeg );

/************************************************************************
  ????  SINT32 ReleaseStreamSeg( SEG_ ARRAY_S *pStreamSegArray, UINT32 StreamID)
  ????  ??ID??StreamID??????????????????????????????????????????????????????????????????????????????????????????????????????
  ????  pStreamSegArray ??????????????
      StreamID  ????????????????ID
        ????StreamID??????0~ MAX_STREAM_SEG_NUM-1????????????????????????StreamID????????????
        ????StreamID = 0xffffffff??????????????????????????????????????????????????????????
      ????????????????????????????????????????SM??????????????????????????????????????????????????
      ????????????????????????????????????????????????????????????????
  ??????  ????????FMW_OK????????????????
************************************************************************/
SINT32 ReleaseStreamSeg( SEG_ARRAY_S *pStreamSegArray, UINT32 StreamID );

/************************************************************************
    ????  SINT32 GetSegStreamSize( SEG_ARRAY_S *pSegStreamArray, SINT32 *pStreamSize)
    ????  ????????????????????????????????????????????????????????????????????????????????
    ????  pSegStreamArray ????????????????
    ??????  ??????????????????????????????????????????
************************************************************************/
SINT32 GetSegStreamSize( SEG_ARRAY_S *pSegStreamArray, SINT32 *pStreamSize);

/************************************************************************
    ????  GetSegStreamNum(SEG_ARRAY_S *pSegStreamArray, SINT32 *pStreamNum);
    ????  ??????????????????????????????????????????????????????????????????????????????
    ????  pSegStreamArray ????????????????
    ??????  ??????????????????????????????????????????
************************************************************************/
SINT32 GetSegStreamNum(SEG_ARRAY_S *pSegStreamArray, SINT32 *pStreamNum);

/************************************************************************
????  VOID GetFreshSegStream( SEG_ARRAY_S *pSegStreamArray, SINT32 *pFreshNum, SINT32 *pFreshSize)
????  ????????Seg Buffer??????????
????  
??????  ??
************************************************************************/
VOID GetFreshSegStream( SEG_ARRAY_S *pSegStreamArray, SINT32 *pFreshNum, SINT32 *pFreshSize);

/************************************************************************
????  SINT32 SM_OpenSCDDrv(SCD_OPEN_PARAM_S *pOpenParam)
????  ????SCD????
????  
??????  ??
************************************************************************/
SINT32 SM_OpenSCDDrv(SCD_OPEN_PARAM_S *pOpenParam);

/************************************************************************
????  SINT32 SM_CloseSCDDrv(VOID)
????  ????SCD????
????  
??????  ??
************************************************************************/
SINT32 SM_CloseSCDDrv(VOID);

/************************************************************************
????  VOID SM_GiveThreadEvent(SINT32 SmID)
????  SCD????????????????????
????  
??????  ??
************************************************************************/
VOID   SM_GiveThreadEvent(SINT32 SmID);

/************************************************************************
????  VOID SCDDRV_ResetSCD(SINT32 ChanID)
????  ????SCD????????????????????????????SCD
????  
??????  ??
************************************************************************/
VOID   SCDDRV_ResetSCD(SINT32 ChanID);

/************************************************************************
  ????  SINT32 SM_Reset ( SINT32 SmID )
  ????  ?????????????????????????????????????? 
      ??????????ID????SmID??????????????????????????????????????????
  ????  SmID  ??????????????????????????????????????????????????????????????????????????????
      ??????SmID????????????????????
  ??????  ????????FMW_OK??????????????????????
************************************************************************/
SINT32 SM_ClearInst (SINT32 SmID);
SINT32 SM_Reset ( SINT32 SmID );
SINT32 SM_Start (SINT32 SmID);
SINT32 SM_Stop (SINT32 SmID);

/************************************************************************
  ????  SINT32 SM_Config ( SINT32 SmID, SM_CFG_S *pSmCfg )
  ????  ????????????????????????????????????????????????????????????????????????????????????????????????
  ????  SmID  ????????????????????????????????????????????????????????????????????????????????????
      SmID????????????????????
      pSmCfg  SM??????????????
  ??????  ????????FMW_OK??????????????????????
************************************************************************/
SINT32 SM_Config ( SINT32 SmID, SM_CFG_S *pSmCfg );

/************************************************************************
    ????    SINT32 SM_GetInfo( SINT32 SmID, SM_INST_INFO_S *pSmInstInfo )
    ????  ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????SCD????????????????????????
    ????  SmID  ????????????????????????
            pSmInstInfo  ??????????????????
    ??????  FMW_ERR_PARAM or FMW_OK
************************************************************************/
SINT32 SM_GetInfo( SINT32 SmID, SM_INST_INFO_S *pSmInstInfo );

/************************************************************************
  ????  SINT32 SM_PushRaw(SINT32 SmID, RAW_PACKET_S *pRawPacket)
  ????  ????????????????????????????????????????????????????????????????????????????????SM??????????????????????????????????????????????????
  ????  SmID  ????????????????????????
    PhyAddr ??????????????????
    VirAddr ??????????????????
    Length  ????????????????????????????
    Pts ????????????????????(PTS)
  ??????  ????????FMW_OK??????????????????????
************************************************************************/
SINT32 SM_PushRaw(SINT32 SmID, STREAM_DATA_S *pRawPacket);


/************************************************************************
????  SINT8 SM_IsScdBypassStandard(SINT32 SmID)
????  ????????SCD??????????????????SCD??????????
????  SmID  ????????????????????????
??????  1 ??????????SCD????bypass??????0 ????????SCD
************************************************************************/
SINT8 SM_IsScdBypassInst(SM_INSTANCE_S *pSmInstArray);

/************************************************************************
????  SINT32 SM_ReadStreamSeg(SINT32 SmID, STREAM_SEG_S *pStreamSeg )
????  ????????????????????????????????????????????
????  SmID  ????????????????????????
      pStreamSeg  ????????????????????????
??????  ????????????????FMW_OK??????????????????????
************************************************************************/
SINT32 SM_ReadStreamSeg(SINT32 SmID, STREAM_SEG_S *pStreamSeg);

/************************************************************************
  ????  SINT32 SM_ReleaseStreamSeg( SINT32 SmID, SINT32 StreamID )
  ????  ????????????????????????????????????????????????????
  ????  SmID  ????????????????????????
        StreamID  ????????ID
  ??????  ??
************************************************************************/
SINT32 SM_ReleaseStreamSeg( SINT32 SmID, SINT32 StreamID );

/************************************************************************
  ????  SINT32 CalcInstBlockTime( SINT32 SmID )
  ????  ????????????????????????????????????????????????????????????
          ????????????????????????"????????????"
  ????  SmID  ????????????????????????
          FirstCalc  1: ??????????????????"????????????"
                     0: ????????????????????????????????????????
  ??????  ????????????
************************************************************************/
SINT32 CalcInstBlockTime( SINT32 SmID, SINT32 FirstCalc );

/************************************************************************
  ????  SINT32 SetInstMode( SINT32 SmID, SINT32 Mode )
  ????  ????????????????????????????????????????????????????????????
          ????????????????????????"????????????"
  ????  SmID  ????????????????????????
          Mode    SM_INST_MODE_WORK  ????????
                  SM_INST_MODE_WAIT  ????????
  ??????  ????????FMW_OK?? ??????????????
************************************************************************/
SINT32 SetInstMode( SINT32 SmID, SINT32 Mode );


/*========================================================================
    part4.   SCD level ???????????????????? 
========================================================================*/

/************************************************************************
  ????  SINT32 CutStreamWithSCD(RAW_ARRAY_S *pRawStreamArray, SEG_ARRAY_S *pStreamSegArray, UINT32 StdType, SINT32 *pCutRawNum)
    ????  ????SCD??????????
            ??????????????????????????????????????????SCD??????????SCD??????????????????????????????????????????????
            1.  ????????????????????????
            2.  ??????????PTS????
            ????????????????????????????????????????????????????????????????????????????????PTS??????????????MPEG????????????????????????
            ??????????????????????????????ShowFirstRawPacket() / ShowNextRawPacket()??????????????????????????????????????????????
    ????  pRawStreamArray ??????????
          pStreamSegArray ??????????????
          StdType ????????????????
            SCD??????????????????????????
            pCutRawNum ????????????????????????0????????
    ??????  FMW_OK????????
************************************************************************/
SINT32 CutStreamWithSCD(SM_INSTANCE_S *pScdInstance);

/************************************************************************
  ????  VOID ScdDriver(SM_CTRLREG_S *pSmCtrlReg, UINT32 *pRegUpAddress)
    ????  ??????????????
    ????  
    ??????  
************************************************************************/
SINT32 ScdDriver(SM_CTRLREG_S *pSmCtrlReg, SM_PUSHRAW_S *pSmPushRaw, SINT32 SegStreamSize,RAW_ARRAY_S *pRawStreamArray,
            SINT32 *pDownMsgVirAddr, UADDR DownMsgPhyAddr);

/************************************************************************
  ????  VOID WriteScdVtrlReg()
    ????  ????Scd??????????????
    ????  
    ??????
************************************************************************/
VOID WriteScdVtrlReg(SM_CTRLREG_S *pSmCtrlReg);

/************************************************************************
  ????  SINT32 WriteScdMsg(SM_PUSHRAW_S *pSmPushRaw, SINT32 *pDownMsgVirAddr, UADDR DownMsgPhyAddr)
    ????  ????Scd??????????
    ????  
    ??????
************************************************************************/
SINT32 WriteScdMsg(SM_PUSHRAW_S *pSmPushRaw, SINT32 SegStreamSize, RAW_ARRAY_S *pRawStreamArray,
           SINT32 *pDownMsgVirAddr, UADDR DownMsgPhyAddr, SINT32 LowdlyFlag);

/************************************************************************
  ????  VOID ReadScdStateReg(SM_STATEREG_S *pSmStateReg)
    ????  ????Scd??????????????
    ????  
    ??????
************************************************************************/
VOID ReadScdStateReg(SM_STATEREG_S *pSmStateReg);

/************************************************************************
  ????  SINT32 CheckScdStateReg(SM_STATEREG_S *pSmStateReg, SINT32 StdType)
    ????  ????Scd??????????????
    ????  
    ??????
************************************************************************/
SINT32 CheckScdStateReg(SM_STATEREG_S *pSmStateReg, SINT32 StdType);

/************************************************************************
????  SINT32 ScdReturnSegFilter(SM_SEGSTREAMFILTER_S *pSegStreamFilter, SINT32 *pTransFormSeg, SINT32 *pSegNum, UINT32 UpMsgStepNum)
????  
????    pSegNum(????/????)
??????  FMW_OK????????
************************************************************************/
SINT32 ScdReturnSegFilter(SM_SEGSTREAMFILTER_S *pSegStreamFilter, SINT32 *pTransFormSeg, SINT32 *pExtraSrcBack, SINT32 *pSegNum, UINT32 UpMsgStepNum);

/************************************************************************
????  SINT32 CheckSegValid(STREAM_SEG_S *pSegPacket, SINT32 SendSegTotalSize, SINT32 SegFreeBufLen)
????  
        PreSegTotalSize:??????????????????????
        SegFreeBufLen:Seg Stream Buffer????????????????
??????  FMW_OK????????

************************************************************************/
SINT32 CheckSegValid(STREAM_SEG_S *pSegPacket, SINT32 SegFreeBufLen);

/************************************************************************
????  SM_PUSHRAW_S *pPushRaw, SINT32 CurrSegTotalSize, SINT32 *pCurrRawId,UINT32 *pPts)
????  
????    
??????  Pts
************************************************************************/
VOID GetSegPts(RAW_ARRAY_S *pRawStreamArray, SINT32 Len, UINT64 *pLastPts, STREAM_SEG_S* pSegPacket);

/************************************************************************
????  SINT32 ProcessSCDReturn(RAW_ ARRAY_S *pRawStreamArray, SEG_ARRAY_S *pStreamSegArray, SINT32 *pCutRawNum)
????  ????SCD????????????
        ????????SCD??????????????????????????????????????????????????????????????????????
        1.  ??????????????????????NAL????????STREAM_SEG_S????????????????????????????pStreamSegArray??????????
        2.  ??????????????????????????????????????????????????????
        ????
        pRawStreamArray ??????????
        pStreamSegArray ??????????????
??????  FMW_OK????????
************************************************************************/
SINT32 ProcessScdReturn(SM_INSTANCE_S *pScdInstance);

/************************************************************************
  ????  VOID SM_SCDIntServeProc ( VOID )
  ????  ????????SCD????????????????????SCD??????????????????????????????
  ????  ??  
  ??????  ??
************************************************************************/
VOID SM_SCDIntServeProc ( VOID );

/************************************************************************
  ????  VOID SM_Wakeup ( VOID )
  ????  ??????????????SM??????????SM????????????????????
      ????????????????SCD????????????????????????????????????
      ????????????????????SCD????????????????????????????
  ????  ??  
  ??????  ??
************************************************************************/
VOID SM_Wakeup ( VOID );

/************************************************************************
????  SINT32 ReadRawStreamData(SINT32 InstID, STREAM_DATA_S * pRawPacket)
????  ????????????????
????  
??????  ??
************************************************************************/
SINT32 ReadRawStreamData(SINT32 InstID, STREAM_DATA_S * pRawPacket);

/************************************************************************
????  SINT32 ReleaseRawStreamData(SINT32 InstID, STREAM_DATA_S * pRawPacket)
????  ????????????????
????  
??????  ??
************************************************************************/
SINT32 ReleaseRawStreamData(SINT32 InstID, STREAM_DATA_S * pRawPacket);

/************************************************************************
????  VOID PrintScdRawState()
????  ????Raw??????????????
????  
??????  ??
************************************************************************/
VOID PrintScdRawState(SINT32 SmID, SINT32 PrintDetail);

/************************************************************************
????  VOID PrintScdSegState()
????  ????Seg??????????????
????  
??????  ??
************************************************************************/
VOID PrintScdSegState(SINT32 SmID, SINT32 PrintDetail);
/************************************************************************
????  VOID PrintScdVtrlReg()
????  ????Scd??????????????
????  
??????  ??
************************************************************************/
VOID PrintScdVtrlReg(VOID);

/************************************************************************
????  VOID PrintScdVtrlReg()
????  ??????????????
????  
??????  ??
************************************************************************/
VOID PrintDownMsg(UADDR DownMsgPhyAddr, SINT32 * pDownMsgVirAddr, SINT32 PushRawNum);

/************************************************************************
????  VOID PrintScdStateReg()
????  ????Scd??????????????
????  
??????  ??
************************************************************************/
VOID PrintScdStateReg(SM_STATEREG_S *pSmStateReg);

/************************************************************************
????  VOID PrintSmInfo()
????  ????Scd????????
????  
??????  ??
************************************************************************/
VOID PrintSmInfo(SINT32 SmID);

/************************************************************************
????  SINT32 SM_AllocDSPCtxMem(SINT32 SmID)
????  ????SCD DSP??????????????
????  
??????  ??
************************************************************************/
SINT32 SM_AllocDSPCtxMem(SINT32 SmID);

/************************************************************************
????  VOID SM_DeletDSPCtxMem(MEM_RECORD_S *pstDSPMem)
????  ????SCD DSP??????????????
????  
??????  ??
************************************************************************/
VOID SM_DeletDSPCtxMem(MEM_RECORD_S *pstDSPMem);

/************************************************************************
????  VOID WriteHexFile(SINT32 eVidStd)
????  ????DSP????
????  
??????  ??
************************************************************************/
VOID WriteHexFile(SINT32 eVidStd);

#ifdef ENV_ARMLINUX_KERNEL
/************************************************************************
????   SINT32 SCDDRV_IsScdIdle(VOID)
????   check SCD status
????
?????? VFMW_TRUE->0 :IDLE
       VFMW_FALSE->1 :RUNNING
************************************************************************/
SINT32 SCDDRV_IsScdIdle(VOID);

#endif
#endif  // __SCD_DRV_H__

