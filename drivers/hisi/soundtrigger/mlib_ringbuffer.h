
#ifndef __MLIB_RINGBUFFER_H__
#define __MLIB_RINGBUFFER_H__

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif

//Return Code
enum RING_BUFFER_RET_CODE {
	RING_BUFFER_NORMAL,
	RING_BUFFER_BAD_PARAM,
	RING_BUFFER_ALLOCATE_FAIL,
	RING_BUFFER_EMPTY,
	RING_BUFFER_OVERWRITE,
	RING_BUFFER_NO_SKIP
};

struct _RingBuffer;
typedef struct _RingBuffer RingBuffer;

//#define RING_BUFFER_THREAD_SAFE

/*****************************************************************************
 ?? ?? ??  : RingBuffer_Init
 ????????  : ??????Ring Buffer????????????????memory??
 ????????  : rb: ????RingBuffer????????????
 ????????  : element_size: Ring Buffer????????????
 ????????  : element_count: Ring Buffer??????????
 ?? ?? ??  : RING_BUFFER_NORMAL??Success, RING_BUFFER_ALLOCATE_FAIL: Fail
*****************************************************************************/
extern RingBuffer *RingBuffer_Init(void * ringbufferAddr, int element_size, int element_cnt);

/*****************************************************************************
 ?? ?? ??  : RingBuffer_GetCount
 ????????  : ????Ring buffer????????????
 ????????  : rb: ????RingBuffer????????????
 ?? ?? ??  : ????????
*****************************************************************************/
extern unsigned int RingBuffer_GetCount(RingBuffer *rb);

/*****************************************************************************
 ?? ?? ??  : RingBuffer_IsEmpty
 ????????  : ????Buffer????????
 ????????  : rb: ????RingBuffer????????????
 ?? ?? ??  : True??Buffer???? FALSE??Buffer????
*****************************************************************************/
extern int RingBuffer_IsEmpty(RingBuffer *rb);

/*****************************************************************************
 ?? ?? ??  : RingBuffer_IsFull
 ????????  : ????Buffer??????
 ????????  : rb: ????RingBuffer????????????
 ?? ?? ??  : True??Buffer???? FALSE??Buffer????
*****************************************************************************/
extern int RingBuffer_IsFull(RingBuffer *rb);

extern int RingBuffer_GetTransFlag(RingBuffer *rb);

extern int RingBuffer_SetTransFlag(RingBuffer *rb, int transFlag);


/*****************************************************************************
 ?? ?? ??  : RingBuffer_Get
 ????????  : ??Ring Buffer????????????????
 ????????  : rb: ????RingBuffer????????????
 ????????  : element: ??????????????
 ?? ?? ??  : Return Code
*****************************************************************************/
extern int RingBuffer_Get(RingBuffer *rb, void *element);

/*****************************************************************************
 ?? ?? ??  : RingBuffer_Put
 ????????  : ??Ring Buffer????????????????
 ????????  : rb: ????RingBuffer????????????
 ????????  : element: ??????????????????
 ?? ?? ??  : ??
*****************************************************************************/
extern int RingBuffer_Put(RingBuffer *rb, const void *element);

/*****************************************************************************
 ?? ?? ??  : RingBuffer_Get_FastData
 ????????  : ??Ring Buffer????????????????
 ????????  : rb: ????RingBuffer????????????
			dstAddr??????????
			stopFlag??????????
 ????????  :
 ?? ?? ??  : ??
*****************************************************************************/
extern int RingBuffer_Compare(RingBuffer *rb, const void *element,int compareCount);
extern int RingBuffer_Backspace(RingBuffer *rb, unsigned int skip_cnt);



/*****************************************************************************
 ?? ?? ??  : RingBuffer_Erase
 ????????  : ????????
 ????????  : rb: ????RingBuffer????????????
 ????????  : eraze_count: ????????????????
 ?? ?? ??  : ??
*****************************************************************************/
extern int RingBuffer_Skip(RingBuffer *rb, unsigned int skip_count);

/*****************************************************************************
 ?? ?? ??  : RingBuffer_DeInit
 ????????  : ????Ring Buffer??????????????
 ????????  : rb: ????RingBuffer????????????
 ?? ?? ??  : ??
*****************************************************************************/
extern void RingBuffer_DeInit(RingBuffer *rb);

#ifdef __cplusplus
	#if __cplusplus
		}
	#endif
#endif
#endif
