

#ifndef __DMAC_AP_PM_H__
#define __DMAC_AP_PM_H__

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif

#ifdef _PRE_WLAN_FEATURE_PM
/*****************************************************************************
  1 ??????????????
*****************************************************************************/
#include "oal_ext_if.h"
#include "mac_device.h"
#include "frw_ext_if.h"
#include "mac_pm.h"


#undef  THIS_FILE_ID
#define THIS_FILE_ID OAM_FILE_ID_DMAC_AP_PM_H
/*****************************************************************************
  2 ??????
*****************************************************************************/
#define AP_PWR_DEFAULT_INACTIVE_TIME    10                      /*????inactive???? minute*/
#define AP_PWR_DEFAULT_USR_CHECK_TIME   5000                    /*???????????????????????????????? ms*/
#define AP_PWR_MAX_USR_CHECK_COUNT      30000/AP_PWR_DEFAULT_USR_CHECK_TIME          /*30s????????????????????*/



/*****************************************************************************
  3 ????????
*****************************************************************************/
typedef enum {
    PWR_SAVE_STATE_WORK = 0,         /*????????*/
    PWR_SAVE_STATE_DEEP_SLEEP,      /*????????*/
    PWR_SAVE_STATE_WOW,             /*WOW????*/
    PWR_SAVE_STATE_IDLE,            /*idle????????????????*/
    PWR_SAVE_STATE_OFF,             /*????????*/

    PWR_SAVE_STATE_BUTT             /*????????*/
} ap_pwr_save_state_info;

typedef enum {
    AP_PWR_EVENT_POWER_OFF = 0,     /*????????*/
    AP_PWR_EVENT_POWER_ON,          /*????????*/
    AP_PWR_EVENT_WIFI_ENABLE,       /*????wifi*/
    AP_PWR_EVENT_WIFI_DISABLE,      /*??????wifi*/
    AP_PWR_EVENT_NO_USR,            /*??????????*/
    AP_PWR_EVENT_USR_ASSOC,         /*????????????*/
    AP_PWR_EVENT_INACTIVE,          /*VAP??????*/
    AP_PWR_EVENT_ACTIVE,            /*VAP????*/
    AP_PWR_EVENT_WOW_WAKE,          /* GPIO????WOW */

    AP_PWR_EVENT_BUTT
}ap_pwr_save_event;


/*****************************************************************************
  4 ????????????
*****************************************************************************/


/*****************************************************************************
  5 ??????????
*****************************************************************************/


/*****************************************************************************
  6 ????????
*****************************************************************************/


/*****************************************************************************
  7 STRUCT????
*****************************************************************************/
/*pm????????????*/
typedef struct _mac_pm_handler{
    mac_fsm_stru         *p_mac_fsm;               /*??????????*/
    oal_uint32           ul_pwr_arbiter_id;        /*arbiter id*/
    oal_uint32           bit_pwr_sleep_en:1,       /*????????????*/
                         bit_pwr_wow_en:1,         /*wow????????*/
                         bit_pwr_siso_en:1,        /*??????????????????,????????????????????????????*/
                         bit_rsv:29;
   oal_uint32            ul_max_inactive_time;    /*work??????????????????*/
   oal_uint32            ul_inactive_time;        /*??????????????*/
   oal_uint32            ul_user_check_count;     /*??????????????*/
   oal_uint32            ul_idle_beacon_txpower;   /*idle????beaocn txpower*/
   frw_timeout_stru      st_inactive_timer;       /*??????????????,????????????????????????????????*/
} mac_pm_handler_stru;


typedef struct
{
    oal_uint16                       us_type;         /* ???????? */
    oal_uint16                       us_data_len;     /* ???????????????? */
    oal_uint32                       ul_data[1];      /* ????????????????4??????????????????,????4?????????????????????????? */
}mac_pm_event_stru;


/*****************************************************************************
  8 UNION????
*****************************************************************************/


/*****************************************************************************
  9 OTHERS????
*****************************************************************************/


/*****************************************************************************
  10 ????????
*****************************************************************************/
extern mac_pm_handler_stru* dmac_pm_ap_attach(oal_void* pst_oshandler);
extern oal_void dmac_pm_ap_deattach(oal_void* pst_oshandler);
extern oal_uint32 dmac_pm_post_event(oal_void* pst_oshandler, oal_uint16 us_type, oal_uint16 us_datalen, oal_uint8* pst_data);
extern oal_uint8 dmac_pm_vap_current_state(oal_void* pst_oshandler);
extern oal_uint32  ap_pm_wow_host_wake_event(frw_event_mem_stru *pst_event_mem);
#endif

#ifdef __cplusplus
    #if __cplusplus
        }
    #endif
#endif

#endif /* end of hmac_fsm.h */
