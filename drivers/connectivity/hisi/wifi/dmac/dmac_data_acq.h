

#ifndef __DMAC_DATA_ACQ_H__
#define __DMAC_DATA_ACQ_H__

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif

#ifdef _PRE_WLAN_FEATURE_DAQ

/*****************************************************************************
  1 ??????????????
*****************************************************************************/
#include "oal_mem.h"
#include "oal_types.h"
#include "oal_ext_if.h"
#include "oam_ext_if.h"
#include "wlan_spec.h"
#include "frw_ext_if.h"
#include "mac_vap.h"
#include "mac_device.h"
#include "mac_resource.h"
#include "hal_witp_rf.h"
#include "oal_net.h"


#undef  THIS_FILE_ID
#define THIS_FILE_ID OAM_FILE_ID_DMAC_DATA_ACQ_H

/*****************************************************************************
  2 ??????
*****************************************************************************/
#define DMAC_DATA_ACQ_MAX_UNITLEN 65528
#define DMAC_DATA_ACQ_MAX_UNITNUM 65535
#define DMAC_DATA_ACQ_MAX_LEN     (1024 * 4096)


/*****************************************************************************
  3 ????????
*****************************************************************************/
/********************* ???????????? *********************/
typedef enum
{
    DMAC_DATA_ACQ_PRE      = 0,       /* ???????????????? MAC?????? */
    DMAC_DATA_ACQ_COND     = 1,       /* ???????????????? PHY?????? */
    DMAC_DATA_ACQ_ENABLE   = 2,       /*       ????????????????     */
    DMAC_DATA_ACQ_STATUS   = 3,       /*    ????????????????????    */
    DMAC_DATA_ACQ_RECODE   = 4,       /*    ????????????????????    */

    DMAC_DATA_ACQ_BUTT
} dmac_data_acq_enum;
typedef oal_uint8 dmac_data_acq_enum_uint8;

/********************* ???????????? *********************/
typedef enum
{
    DMAC_DATA_ACQ_COND_ADC_TH     = 1,  /* ADC???????? */
    DMAC_DATA_ACQ_COND_AGC_BH     = 2,  /*   AGC????   */
    DMAC_DATA_ACQ_COND_AGC_LOCK   = 4,  /*   AGC????   */
    DMAC_DATA_ACQ_COND_PACK_L     = 8,  /*  ?????????? */

    DMAC_DATA_ACQ_COND_BUTT       = 16
} dmac_data_acq_cond_enum;
typedef oal_uint8 dmac_data_acq_cond_enum_uint8;

/********************* BIT???????? *********************/
typedef enum
{
    DMAC_DATA_ACQ_BIT_0_7          = 0,  /* ????[7:0]bits ADC ???????????????? */
    DMAC_DATA_ACQ_BIT_1_8          = 1,  /* ????[8:1]bits ADC ???????????????? */
    DMAC_DATA_ACQ_BIT_2_9          = 2,  /* ????[9:2]bits ADC ???????????????? */

    DMAC_DATA_ACQ_BIT_BUTT
} dmac_data_acq_bit_enum;
typedef oal_uint8 dmac_data_acq_bit_enum_uint8;

/********************* ???????????? *********************/
typedef enum
{
    DMAC_DATA_ACQ_STATUS_INIT            = 0,  /*       ??????????      */
    DMAC_DATA_ACQ_STATUS_MAC_REG         = 1,  /* ????????MAC?????????? */
    DMAC_DATA_ACQ_STATUS_PHY_REG         = 2,  /* ????????PHY?????????? */
    DMAC_DATA_ACQ_STATUS_ENABLE          = 3,  /*    ????????????????   */
    DMAC_DATA_ACQ_STATUS_COMPLETE        = 4,  /*  ???????????????????? */

    DMAC_DATA_ACQ_STATUS_BUTT
} dmac_data_acq_status_enum;
typedef oal_uint8 dmac_data_acq_status_enum_uint8;

/********************* ???????????? *********************/
typedef enum
{
    DMAC_DATA_ACQ_SEND_TYPE_INFO         = 0,  /* ??????APP?????????????? */
    DMAC_DATA_ACQ_SEND_TYPE_UNIT         = 1,  /*    ??????APP??????????  */
    DMAC_DATA_ACQ_SEND_TYPE_READY        = 2,  /*   APP????????????????Driver????????  */
    DMAC_DATA_ACQ_SEND_TYPE_FAIL         = 3,  /*   APP????????????????Driver????????  */
    DMAC_DATA_ACQ_SEND_TYPE_ACK          = 4,  /*   APP????????????????Driver????????  */

    DMAC_DATA_ACQ_SEND_TYPE_BUTT
} dmac_data_acq_send_type_enum;
typedef oal_uint8 dmac_data_acq_send_type_enum_uint8;

/*****************************************************************************
  4 ????????????
*****************************************************************************/
extern oal_uint8  *g_puc_daq_mem_addr;


/*****************************************************************************
  5 ??????????
*****************************************************************************/


/*****************************************************************************
  6 ????????
*****************************************************************************/


/*****************************************************************************
  7 STRUCT????
*****************************************************************************/
/* PHY?????????????????????????????????? */
typedef struct
{
    oal_uint32   bit_cfg_real_sample_bits_sel      :   2,    /*   bit??????   */
                 bit_cfg_real_sample_data_th       :   9,    /*    ADC????    */
                 bit_reserved                      :   5,    /*     ????      */
                 bit_cfg_real_sample_cond_ctrl     :   4,    /*   ????????    */
                 bit_cfg_real_sample_ch_sel        :   2,    /*   ????????    */
                 bit_cfg_real_sample_en            :   1,    /*   ????????    */
                 bit_reserved1                     :   9;    /*     ????      */
}dmac_data_acq_cond_stru;

/* MAC???????????????????????? */
typedef struct
{
    oal_uint8                *puc_start_addr;    /*   ????????   */
    oal_bool_enum_uint8       en_daq_enable;     /* ???????????? */
    oal_uint8                 uc_resv[1];
    oal_uint16                us_num;            /* ???????????? */
    oal_uint16                us_depth;          /*   ????????   */
    oal_uint16                us_len_unit;       /* ???????????? */
}dmac_data_acq_prep_stru;

typedef struct
{
    oal_workqueue_stru                      *daq_rx_workqueue;
    oal_work_stru                            rx_daq_work;
    oal_netbuf_head_stru                     rx_daq_dbg_seq;
}dmac_data_acq_workqueue_stru;

/* ?????????????????? */
typedef struct
{
    dmac_data_acq_status_enum_uint8       en_daq_status;         /*   ????????????????????????????    */
    oal_bool_enum_uint8                   en_daq_apprecv_ready;  /*   ????APP????????????????????  */
    oal_bool_enum_uint8                   uc_ack_flag;           /*          ack????????           */
    oal_bool_enum_uint8                   en_daq_app_error;      /*            app????             */
    oal_uint32                            ul_length;             /*       ???? * ???? <= 4M      */
    oal_uint32                            ul_daq_sn;             /*            ????????            */
    dmac_data_acq_workqueue_stru          st_daq_workqueue;
    dmac_data_acq_cond_stru               st_daq_cond;
    dmac_data_acq_prep_stru               st_daq_prep_info;
}dmac_data_acq_stru;

/* ????????app???????? */
typedef struct
{
    oal_uint32      ul_daq_addr;         /* ?????????????? */
    oal_uint32      ul_data_len;         /* ???????????????? */
    oal_uint32      ul_unit_len;         /* ??????????????????:??????(daq_unit_head)?????? */
}dmac_data_acq_info_stru;

/* ???????????????? */
typedef struct
{
    dmac_data_acq_send_type_enum_uint8  en_send_type;        /* ?????????????????? */
    oal_uint8                           uc_resv[3];
    oal_uint32                          ul_msg_sn;           /* ?????????????????? */
    oal_uint32                          ul_data_len;         /* ???????????? */
}dmac_data_acq_data_head_stru;

/*****************************************************************************
  8 UNION????
*****************************************************************************/


/*****************************************************************************
  9 OTHERS????
*****************************************************************************/


/*****************************************************************************
  10 ????????
*****************************************************************************/
extern dmac_data_acq_stru g_st_data_acq;

extern oal_uint32  dmac_config_data_acq(mac_vap_stru *pst_mac_vap, oal_uint8 uc_len, oal_uint8 *puc_param);
extern oal_uint32  dmac_data_acq_init(oal_void);
extern oal_uint32  dmac_data_acq_exit(oal_void);


#endif  /* end of _PRE_WLAN_FEATURE_DAQ */

#ifdef __cplusplus
    #if __cplusplus
        }
    #endif
#endif

#endif /* end of dmac_data_acq.h */
